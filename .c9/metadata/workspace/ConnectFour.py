{"changed":true,"filter":false,"title":"ConnectFour.py","tooltip":"/ConnectFour.py","value":"\n\nclass ConnectFour(Game):\n    def get_initial_state(self):\n        # 7 slots per row, 6 rows\n        return [[-1] * 7] * 6\n    \n    def get_properties(self):\n        '''This returns a list of numbers of constant length describing the state, or None\n        This is what we'd feed into a neural net to learn about the game\n        \n        For example, if the game really was player 1's turn to move, it would swap all the pieces and then return the same values\n        ...as if player 0 had made all the moves that player 1 did and vice versa\n        \n        TODO this will need to be defined better if/when we actually start using neural networks\n        '''\n        raise NotImplementedError\n        \n    def swap_players(self):\n        '''Swap the players in a game. Does not return any value.'''\n        raise NotImplementedError\n        \n    def get_copy(self):\n        '''Return a copy of the object'''\n        raise NotImplementedError\n    \n    def get_hash(self):\n        '''Return a unique string for the state and active player'''\n        raise NotImplementedError\n    \n    def get_possible_actions(self):\n        '''Return a list of the possible actions that can be taken by self.active_player in the self.state state\n        Behavior is undefined when the game is complete\n        '''\n        raise NotImplementedError\n        \n    def make_move(self, action):\n        '''Change the state of the game and update the active player based on the action'''\n        raise NotImplementedError\n        \n    def who_won(self):\n        '''Return 0 if player 0 won, 1 if player 1 won, -1 if there was a tie, and None if the game has not finished'''\n        raise NotImplementedError","undoManager":{"mark":80,"position":82,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["c"],"id":1}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["l"],"id":2}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["a"],"id":3}],[{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["s"],"id":4}],[{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["s"],"id":5}],[{"start":{"row":0,"column":5},"end":{"row":0,"column":6},"action":"insert","lines":[" "],"id":6}],[{"start":{"row":0,"column":6},"end":{"row":0,"column":7},"action":"insert","lines":["C"],"id":7}],[{"start":{"row":0,"column":7},"end":{"row":0,"column":8},"action":"insert","lines":["o"],"id":8}],[{"start":{"row":0,"column":8},"end":{"row":0,"column":9},"action":"insert","lines":["n"],"id":9}],[{"start":{"row":0,"column":9},"end":{"row":0,"column":10},"action":"insert","lines":["n"],"id":10}],[{"start":{"row":0,"column":10},"end":{"row":0,"column":11},"action":"insert","lines":["e"],"id":11}],[{"start":{"row":0,"column":11},"end":{"row":0,"column":12},"action":"insert","lines":["c"],"id":12}],[{"start":{"row":0,"column":12},"end":{"row":0,"column":13},"action":"insert","lines":["t"],"id":13}],[{"start":{"row":0,"column":13},"end":{"row":0,"column":14},"action":"insert","lines":["F"],"id":14}],[{"start":{"row":0,"column":14},"end":{"row":0,"column":15},"action":"insert","lines":["o"],"id":15}],[{"start":{"row":0,"column":15},"end":{"row":0,"column":16},"action":"insert","lines":["u"],"id":16}],[{"start":{"row":0,"column":16},"end":{"row":0,"column":17},"action":"insert","lines":["r"],"id":17}],[{"start":{"row":0,"column":17},"end":{"row":0,"column":19},"action":"insert","lines":["()"],"id":18}],[{"start":{"row":0,"column":18},"end":{"row":0,"column":19},"action":"insert","lines":["G"],"id":19}],[{"start":{"row":0,"column":19},"end":{"row":0,"column":20},"action":"insert","lines":["a"],"id":20}],[{"start":{"row":0,"column":20},"end":{"row":0,"column":21},"action":"insert","lines":["m"],"id":21}],[{"start":{"row":0,"column":21},"end":{"row":0,"column":22},"action":"insert","lines":["e"],"id":22}],[{"start":{"row":0,"column":23},"end":{"row":0,"column":24},"action":"insert","lines":[":"],"id":23}],[{"start":{"row":0,"column":24},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":24},{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":1,"column":4},"end":{"row":39,"column":33},"action":"insert","lines":["def get_initial_state(self):","        raise NotImplementedError","    ","    def get_properties(self):","        '''This returns a list of numbers of constant length describing the state, or None","        This is what we'd feed into a neural net to learn about the game","        ","        For example, if the game really was player 1's turn to move, it would swap all the pieces and then return the same values","        ...as if player 0 had made all the moves that player 1 did and vice versa","        ","        TODO this will need to be defined better if/when we actually start using neural networks","        '''","        raise NotImplementedError","        ","    def swap_players(self):","        '''Swap the players in a game. Does not return any value.'''","        raise NotImplementedError","        ","    def get_copy(self):","        '''Return a copy of the object'''","        raise NotImplementedError","    ","    def get_hash(self):","        '''Return a unique string for the state and active player'''","        raise NotImplementedError","    ","    def get_possible_actions(self):","        '''Return a list of the possible actions that can be taken by self.active_player in the self.state state","        Behavior is undefined when the game is complete","        '''","        raise NotImplementedError","        ","    def make_move(self, action):","        '''Change the state of the game and update the active player based on the action'''","        raise NotImplementedError","        ","    def who_won(self):","        '''Return 0 if player 0 won, 1 if player 1 won, -1 if there was a tie, and None if the game has not finished'''","        raise NotImplementedError"],"id":25}],[{"start":{"row":2,"column":8},"end":{"row":2,"column":33},"action":"remove","lines":["raise NotImplementedError"],"id":26},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["r"]}],[{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["e"],"id":27}],[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["t"],"id":28}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["u"],"id":29}],[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["r"],"id":30}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["n"],"id":31}],[{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":[" "],"id":32}],[{"start":{"row":2,"column":15},"end":{"row":2,"column":17},"action":"insert","lines":["[]"],"id":33}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":18},"action":"insert","lines":["{}"],"id":34}],[{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"remove","lines":["}"],"id":35}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"remove","lines":["{"],"id":36}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":18},"action":"insert","lines":["[]"],"id":37}],[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":[" "],"id":38}],[{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["*"],"id":39}],[{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":[" "],"id":40}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["8"],"id":41}],[{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":[" "],"id":42}],[{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":["*"],"id":43}],[{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":[" "],"id":44}],[{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["8"],"id":45}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"remove","lines":["8"],"id":46}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["7"],"id":47}],[{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"remove","lines":["8"],"id":48}],[{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["6"],"id":49}],[{"start":{"row":1,"column":32},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":50},{"start":{"row":2,"column":0},"end":{"row":2,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["#"],"id":51}],[{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":[" "],"id":52}],[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["7"],"id":53}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["s"],"id":54}],[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["l"],"id":55}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["o"],"id":56}],[{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["t"],"id":57}],[{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["s"],"id":58}],[{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":[" "],"id":59}],[{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":["p"],"id":60}],[{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["e"],"id":61}],[{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["r"],"id":62}],[{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":[" "],"id":63}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["f"],"id":64}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"remove","lines":["f"],"id":65}],[{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["r"],"id":66}],[{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"insert","lines":["o"],"id":67}],[{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["w"],"id":68}],[{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":[" "],"id":69}],[{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":[" "],"id":70}],[{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"remove","lines":[" "],"id":71}],[{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":[","],"id":72}],[{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":[" "],"id":73}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":["6"],"id":74}],[{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":[" "],"id":75}],[{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["r"],"id":76}],[{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["o"],"id":77}],[{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"insert","lines":["w"],"id":78}],[{"start":{"row":2,"column":32},"end":{"row":2,"column":33},"action":"insert","lines":["s"],"id":79}],[{"start":{"row":3,"column":17},"end":{"row":3,"column":18},"action":"insert","lines":["-"],"id":80}],[{"start":{"row":3,"column":18},"end":{"row":3,"column":19},"action":"insert","lines":["1"],"id":81}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":82}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":83}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":true},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1511815548961}